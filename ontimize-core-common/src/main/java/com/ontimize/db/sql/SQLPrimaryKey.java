package com.ontimize.db.sql;

import java.util.List;

public class SQLPrimaryKey extends SQLConstraint {

    protected static final String PRIMARY_KEY = "PRIMARY KEY ";

    /**
     * Creates a new <code>SQLPrimaryKey</code> indicating the name of the constraint and the columns in
     * where the constraint is applied.
     * @param constraintName Name of the constraint
     * @param columns The list of columns in where the constraint is applied.
     */
    public SQLPrimaryKey(String constraintName, List columns) {
        this.constraintName = constraintName;
        this.columns = columns;
    }

    /**
     * Creates a new <code>SQLPrimaryKey</code> indicating the name of the constraint.Only use to drop
     * constraints.
     * @param constraintName Name of the constraint
     */
    public SQLPrimaryKey(String constraintName) {
        this.constraintName = constraintName;
    }

    /**
     * Creates a new <code>SQLPrimaryKey</code> just indicating the column/s in where the constraint is
     * applied. The name of the constraint is generated by default.
     * @param columns The list of columns in where the constraint is applied.
     *
     */
    public SQLPrimaryKey(List columns) {
        this.columns = columns;
    }

    /**
     * This method returns the SQL Statement to add a Primary Key constraint to a database table.
     * Returns a <code>String<code> with the SQL Statement
     */
    @Override
    public String toString() {
        StringBuilder buffer = new StringBuilder();

        if (this.getConstraintName() != null) {
            buffer.append(SQLConstraint.CONSTRAINT);
            buffer.append(this.getConstraintName()).append(" ");
        }
        buffer.append(SQLPrimaryKey.PRIMARY_KEY);
        buffer.append(this.getColumnList());
        return buffer.toString();
    }

}
